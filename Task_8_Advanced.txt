Задача 1
Реалізуйте програму, яка буде емулювати роботу з просторами імен. Необхідно реалізувати підтримку створення просторів імен і додавання в них змінних.

У цьому завданню у кожного простору імен є унікальний текстовий ідентифікатор - його ім'я.

Вашій програмі на вхід подаються такі запити:

    create <namespace> <parent> - створити новий простір імен з ім'ям <namespace> всередині простору <parent>
    add <namespace> <var> - додати в простір <namespace> змінну <var>
    get <namespace> <var> - отримати ім'я простору, з якого буде взята змінна <var> при запиті з простору <namespace>, або None, якщо такого простору не існує.

Розглянемо набір запитів

    add global a
    create foo global
    add foo b
    create bar foo
    add bar a

Структура просторів імен описана даними запитами буде еквівалентна структурі просторів імен, створеної при виконанні даного коду

a = 0
def foo ():
  b = 1
  def bar ():
    a = 2

В основному тілі програми ми оголошуємо змінну a, тим самим додаючи її в простір global. Далі ми оголошуємо функцію foo, що тягне за собою створення локального для неї простору імен всередині простору global. У нашому випадку, це описується командою create foo global. Далі ми оголошуємо всередині функції foo функцію bar, тим самим створюючи простір bar всередині простору foo, і додаємо в bar змінну a.

Додамо запити get до наших запитам

    get foo a
    get foo c
    get bar a
    get bar b

Уявімо як це могло б виглядати в коді

a = 0
def foo ():
  b = 1
  get (a)
  get (c)
  def bar ():
    a = 2
    get (a)
    get (b)

Результатом запиту get буде ім'я простору, з якого буде взята потрібна змінна.
Наприклад, результатом запиту get foo a буде global, тому що в просторі foo не оголошена змінна a, але в просторі global, всередині якого знаходиться простір foo, вона оголошена. Аналогічно, результатом запиту get bar b буде foo, а результатом роботи get bar a буде bar.

Результатом get foo c буде None, тому що ні в просторі foo, ні в його зовнішньому просторі global була оголошена змінна с.

Більш формально, результатом роботи get <namespace> <var> є

    <Namespace>, якщо в просторі <namespace> була оголошена змінна <var>
    get <parent> <var> - результат запиту до простору, всередині якого було створено простір <namespace>, якщо змінна не була оголошена
    None, якщо не існує <parent>, т. Е. <Namespace> - це global.

Формат вхідних даних

У першому рядку дано число n (1 ≤ n ≤ 100) - кількість запитів.
У кожному з наступних n рядків дано по одному запиту.
Запити виконуються в порядку, в якому вони дані у вхідних даних.
Імена простору імен і імена змінних являють собою рядки довжини не більше 10, що складаються з малих латинських букв.
Формат вихідних даних

Для кожного запиту get виведіть в окремому рядку його результат.


Sample Input:

9
add global a
create foo global
add foo b
get foo a
get foo c
create bar foo
add bar a
get bar a
get bar b

Sample Output:

global
None
bar
foo